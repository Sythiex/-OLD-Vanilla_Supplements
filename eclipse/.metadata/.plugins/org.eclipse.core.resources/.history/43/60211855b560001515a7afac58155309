package com.sythiex.vanilla_supplements.items;

import java.util.List;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.world.World;

public class ItemWand extends Item
{
	public static int numberOfModes = 8;
	
	public ItemWand()
	{
		setCreativeTab(CreativeTabs.tabTools);
		setMaxStackSize(1);
	}
	
	@Override
	public void onUpdate(ItemStack itemStack, World world, Entity entity, int p_77663_4_, boolean p_77663_5_)
	{
		if(itemStack.stackTagCompound == null)
		{
			itemStack.stackTagCompound = new NBTTagCompound();
			itemStack.stackTagCompound.setInteger("mode", 1);
			itemStack.stackTagCompound.setBoolean("firstBlockSet", false);
			itemStack.stackTagCompound.setInteger("x", 0);
			itemStack.stackTagCompound.setInteger("y", 0);
			itemStack.stackTagCompound.setInteger("z", 0);
			itemStack.stackTagCompound.setInteger("world", entity.dimension);
		}
	}
	
	@Override
	public void addInformation(ItemStack itemStack, EntityPlayer player, List list, boolean bool)
	{
		if (itemStack.stackTagCompound != null)
		{
			list.add("Mode: " + itemStack.stackTagCompound.getInteger("mode"));
		}
	}
	
	@Override
	public boolean onItemUse(ItemStack itemStack, EntityPlayer player, World world, int x, int y, int z, int side, float sideX, float sideY, float sideZ)
    {
		//System.out.println("onItemUse");
		
		if(!player.canPlayerEdit(x, y, z, side, itemStack) || world.isRemote || player.isSneaking())
        {
            return false;
        }
		else
		{
			
			
			return false;
		}
    }
	
	@Override
	public ItemStack onItemRightClick(ItemStack itemStack, World world, EntityPlayer player)
    {
		//System.out.println("onItemRightClick");
		
		if(!world.isRemote && player.isSneaking())
		{
			int mode = itemStack.stackTagCompound.getInteger("mode");
			++mode;
			if(mode > numberOfModes)
				mode = 1;
			itemStack.stackTagCompound.setInteger("mode", mode);
			System.out.println(mode);
		}
        return itemStack;
    }
	
	public String getWandMode(int mode)
	{
		switch(mode)
		{
		case 1:	return "Rectangular Prism";
		case 2:	return "Rectangular Prism, Hollow";
		case 3:	return "Cylinder";
		case 4:	return "Cylinder, Hollow";
		case 5:	return "Sphere";
		case 6:	return "Sphere, Hollow";
		case 7:	return "Hemisphere";
		case 8:	return "Hemisphere, Hollow";
		default: return null;
		}
	}
}