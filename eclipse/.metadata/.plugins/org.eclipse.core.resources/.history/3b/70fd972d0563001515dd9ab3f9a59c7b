package com.sythiex.vanilla_supplements.blocks;

import java.util.Random;

import com.sythiex.vanilla_supplements.VanillaSupplements;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.world.ColorizerFoliage;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;

public class BlockBerryBush extends BlockBushVS
{
	public BlockBerryBush()
	{
		setBlockName("berryBush");
		setBlockTextureName(VanillaSupplements.MODID + ":berryBush_stage_0");
		setCreativeTab(CreativeTabs.tabDecorations);
	}
	
	@Override
	public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int side, float sideX, float sideY, float sideZ)
    {
		if(!world.isRemote)
		{
			if(world.getBlockMetadata(x, y, z) == maxGrowthStage)
			{
				int pX = player.getPlayerCoordinates().posX;
				int pY = player.getPlayerCoordinates().posY;
				int pZ = player.getPlayerCoordinates().posZ;
				ItemStack berries = new ItemStack(VanillaSupplements.berry, (world.rand.nextInt(3) + 1));
				Entity entity = new EntityItem(world, pX, pY, pZ, berries);
				world.spawnEntityInWorld(entity);
				world.setBlockMetadataWithNotify(x, y, z, 0, 2);
				return true;
			}
		}
		return true;
    }
	
	@Override
	public void registerBlockIcons(IIconRegister iconRegister)
	{
		iIcon = new IIcon[maxGrowthStage + 1];
		iIcon[0] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[1] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[2] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[3] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[4] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[5] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[6] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_0");
		iIcon[7] = iconRegister.registerIcon(VanillaSupplements.MODID + ":berryBush_stage_1");
	}
	
	@SideOnly(Side.CLIENT)
    public int getBlockColor()
    {
        double d0 = 0.5D;
        double d1 = 1.0D;
        return ColorizerFoliage.getFoliageColor(d0, d1);
    }

    /**
     * Returns the color this block should be rendered. Used by leaves.
     */
    @SideOnly(Side.CLIENT)
    public int getRenderColor(int p_149741_1_)
    {
        return ColorizerFoliage.getFoliageColorBasic();
    }

    /**
     * Returns a integer with hex for 0xrrggbb with this color multiplied against the blocks color. Note only called
     * when first determining what to render.
     */
    @SideOnly(Side.CLIENT)
    public int colorMultiplier(IBlockAccess p_149720_1_, int p_149720_2_, int p_149720_3_, int p_149720_4_)
    {
        int l = 0;
        int i1 = 0;
        int j1 = 0;

        for (int k1 = -1; k1 <= 1; ++k1)
        {
            for (int l1 = -1; l1 <= 1; ++l1)
            {
                int i2 = p_149720_1_.getBiomeGenForCoords(p_149720_2_ + l1, p_149720_4_ + k1).getBiomeFoliageColor(p_149720_2_ + l1, p_149720_3_, p_149720_4_ + k1);
                l += (i2 & 16711680) >> 16;
                i1 += (i2 & 65280) >> 8;
                j1 += i2 & 255;
            }
        }

        return (l / 9 & 255) << 16 | (i1 / 9 & 255) << 8 | j1 / 9 & 255;
    }
}